name: Atualização DI e Anbima

on:
  schedule:
    - cron: "30 00 * * 2-6" # 21:30 BRT    
  workflow_dispatch:

jobs:
  update-datasets:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
    
      - name: Install dependencies
        run: pip install -r requirements.txt
    
      - name: Run update script
        run: python update.py

      - name: Check for changes
        id: check_changes
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "date_tag=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
            echo "date_br=$(date +'%d-%m-%Y')" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "cr.cj@outlook.com"
          git config --local user.name "Carlos Carvalho"          
          git add data/*.parquet
          git commit -m "Dados atualizados em [${{ steps.check_changes.outputs.date_br }}]"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release with datasets
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          TAG="data-${{ steps.check_changes.outputs.date_tag }}"
          gh release create "$TAG" \
            data/b3_di.parquet \
            data/anbima_tpf.parquet \
            --title "Dados ${{ steps.check_changes.outputs.date_br }}" \
            --notes "Atualização diária - Dados de ${{ steps.check_changes.outputs.date_br }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old releases
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          gh release list --limit 100 --json tagName --jq '.[] | .tagName' | \
          tail -n +31 | \
          xargs -I {} gh release delete {} --yes || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}